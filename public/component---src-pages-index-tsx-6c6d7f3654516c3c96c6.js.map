{"version":3,"file":"component---src-pages-index-tsx-6c6d7f3654516c3c96c6.js","mappings":"qLAMMA,EAAWC,EAAAA,EAAAA,KAAa,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAP,OAAuBC,EAAAA,cACnDD,EACA,CACED,GAAAA,EACAG,IAAKH,OA+BT,UA3BkB,WAChB,IAAMI,GAAgBC,EAAAA,EAAAA,QAAOP,EAASQ,QAE9BC,GAAoBC,EAAAA,EAAAA,KAApBD,gBACR,GAA8CE,EAAAA,EAAAA,KAAtCC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBAgBxB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcN,EAAgBO,UAAS,SAACC,GAC5C,IAAMC,EAAQC,KAAKC,OAAOd,EAAce,QAAU,GAAKJ,GAEnDC,IAAUN,GACZC,EAAkBK,MAItB,OAAO,WACLH,OAED,CAAEH,IAGH,gBAAC,IAAD,CAAiBU,iBAAe,GAC5BtB,EAASY","sources":["webpack://parallax-landing/./src/pages/index.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { AnimatePresence, useViewportScroll } from 'framer-motion';\n\nimport { SECTIONS } from '@shared/constants';\nimport { useSections } from '@shared/hocs/withSections';\n\nconst sections = SECTIONS.map(({ id, component }) => React.createElement(\n  component, \n  { \n    id,\n    key: id \n  }\n));\n\nconst IndexPage = () => {\n  const sectionsCount = useRef(sections.length);\n\n  const { scrollYProgress } = useViewportScroll();\n  const { currentSection, setCurrentSection } = useSections();\n\n  useEffect(() => {\n    const unsubscribe = scrollYProgress.onChange((value) => {\n      const index = Math.floor((sectionsCount.current - 1) * value);\n\n      if (index !== currentSection) {\n        setCurrentSection(index);\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [ currentSection ]);\n\n  return (\n    <AnimatePresence exitBeforeEnter>\n      { sections[currentSection] }\n    </AnimatePresence>\n  );\n};\n\nexport default IndexPage;\n"],"names":["sections","SECTIONS","id","component","React","key","sectionsCount","useRef","length","scrollYProgress","useViewportScroll","useSections","currentSection","setCurrentSection","useEffect","unsubscribe","onChange","value","index","Math","floor","current","exitBeforeEnter"],"sourceRoot":""}